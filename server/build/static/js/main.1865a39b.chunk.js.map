{"version":3,"sources":["helpers/format.js","helpers/tempConverter.js","redux/ui.js","helpers/localState.js","API/cities.js","redux/cities.js","API/forecast.js","redux/forecast.js","redux/index.js","components/Input.js","components/WeatherData.js","components/Forecast.js","components/ForecastResults.js","components/City.js","components/CityList.js","components/InputResults.js","components/DarkModeToggler.js","components/CelciusToggler.js","components/MainMenu.js","components/App.js","index.js"],"names":["dateOptions","year","month","day","hour","minute","hour12","timeOptions","getLocalDateTime","timeZone","lclNow","Date","utcNow","getTime","getTimezoneOffset","newNow","Intl","DateTimeFormat","undefined","format","dateTime","k2c","k","Math","round","k2f","initialState","prefersDarkMode","prefersCelcius","previousCities","serializedState","localStorage","getItem","JSON","parse","err","getLocalState","inputValue","uiSlice","createSlice","name","reducers","toggleDarkMode","state","toggleCelcius","setInputValue","action","payload","addPreviousCities","newCity","findIndex","prevCity","id","unshift","length","pop","delPreviousCity","cityIndexToDelete","splice","actions","reducer","axios","create","baseURL","fetchState","response","cityNameToSearch","fetchCities","createAsyncThunk","q","API","get","params","then","res","data","catch","citiesSlice","citiesReset","setCityNameToSearch","extraReducers","fulfilled","pending","cityIdToSearch","fetchForecast","forecastSlice","forecastReset","setCityIdToSearch","store","configureStore","ui","cities","forecast","subscribe","stringify","setItem","Error","setLocalState","getState","Input","dispatch","useDispatch","inputRef","useRef","useSelector","useDebouncedCallback","value","debouncedCallback","TextField","label","variant","fullWidth","onChange","e","target","disabled","autoComplete","InputProps","endAdornment","IconButton","edge","onClick","current","focus","Clear","useStyles","makeStyles","container","display","flexWrap","fontSize","cluster","flexGrow","flexBasis","group","flexDirection","pair","key","padding","fontWeight","justifyContent","whiteSpace","specialGroup","temp","alignItems","lineHeight","icon","height","width","WeatherData","classes","minTemp","temp_min","maxTemp","temp_max","sunrise","sunset","pressure","humidity","formattedTemp","formattedMinTemp","formattedMaxTemp","formattedSunrise","formattedSunset","celcius","color","path","getTempLevel","tempLevelColor","tempLevelIconPath","Grid","className","SvgIcon","viewBox","d","Box","root","component","cardHeaderContent","minWidth","cardHeaderTitle","overflow","textOverflow","cardHeaderSubheader","weatherAvatar","backgroundColor","flagAvatar","worldMapAvatar","margin","position","boxShadow","title","withBoxShadow","Forecast","props","main","cityName","weather","coord","sys","timezoneOffset","timezone","extraData","country","flag","region","subregion","timezones","weatherMain","weatherDesc","description","Weather","lon","lat","useState","showCityMap","setShowCityMap","showWorldMap","setShowWorldMap","showFlag","setShowFlag","showWeather","setShowWeather","publicApiKey","cityMapUrl","worldMapUrl","Fade","in","timeout","Card","spacing","item","xs","sm","CardHeader","content","subheader","avatar","Avatar","alt","src","onLoad","Divider","light","CardContent","Collapse","onEntered","CardMedia","ForecastResults","useEffect","cod","Alert","severity","message","Grow","justify","CircularProgress","renderComponent","City","city","onCityClick","small","ListItemText","ListItem","minwidth","button","ListItemAvatar","disableTypography","Row","index","style","cityItem","CityList","scrollToItem","itemCount","itemSize","itemData","overscanCount","InputResults","handleCityClick","DarkModeToggler","Switch","checked","CelciusToggler","theme","dot","list","maxWidth","pushToRight","marginLeft","MainMenu","React","anchorEl","setAnchorEl","open","Boolean","handleClose","Paper","Toolbar","disableGutters","aria-label","aria-controls","aria-haspopup","currentTarget","fontStyle","Tooltip","placement","arrow","href","rel","GitHub","Menu","keepMounted","onClose","List","ListSubheader","size","dense","map","ListItemSecondaryAction","handleCityDelClick","Delete","App","useMemo","createMuiTheme","palette","type","ThemeProvider","CssBaseline","Container","m","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.1865a39b.chunk.js","sourcesContent":["const dateOptions = {\n  year: 'numeric',\n  month: 'short',\n  day: '2-digit',\n  hour: '2-digit',\n  minute: '2-digit',\n  hour12: false\n};\n\nconst timeOptions = { hour: 'numeric', minute: '2-digit', hour12: false };\n\nexport const getLocalDateTime = (timeZone) => {\n  const lclNow = new Date();\n  const utcNow = lclNow.getTime() + lclNow.getTimezoneOffset() * 60000;\n  const newNow = new Date(utcNow + timeZone * 1000);\n  return new Intl.DateTimeFormat(undefined, dateOptions).format(newNow);\n};\n\nexport const getTime = (dateTime) => new Intl.DateTimeFormat(undefined, timeOptions).format(dateTime * 1000);\n","export const k2c = (k) => `${Math.round(k - 273.15)}°C`;\n\nexport const k2f = (k) => `${Math.round(((k - 273.15) * 9) / 5 + 32)}°F`;\n\nexport const getTempLevel = (k) => {\n  const celcius = Math.round(k - 273.15);\n\n  if (celcius < 0) {\n    return {\n      id: 1,\n      name: 'Freezing',\n      color: 'primary.light',\n      path:\n        'm 16,30 c 2.209139,0 4,-1.790861 4,-4 0,-1.480566 -0.804398,-2.773254 -2,-3.464871 V 4.0049466 C 18,2.8976452 17.11227,2 16,2 14.895431,2 14,2.8970262 14,4.0049466 V 22.535129 C 12.804398,23.226746 12,24.519434 12,26 c 0,2.209139 1.790861,4 4,4 z m 0,2 c -3.313709,0 -6,-2.686291 -6,-6 0,-1.777005 0.772506,-3.373582 2,-4.472213 V 4.0055202 C 12,1.7870853 13.790861,0 16,0 c 2.204644,0 4,1.7933325 4,4.0055202 V 21.527787 c 1.227494,1.098631 2,2.695208 2,4.472213 0,3.313709 -2.686291,6 -6,6 z m 0,0'\n    };\n  }\n  if (celcius >= 0 && celcius < 10) {\n    return {\n      id: 2,\n      name: 'Cold',\n      color: 'primary.light',\n      path:\n        'm 16,32 c -3.313709,0 -6,-2.686291 -6,-6 0,-1.777005 0.772506,-3.373582 2,-4.472213 V 4.0055202 C 12,1.7870853 13.790861,0 16,0 c 2.204644,0 4,1.7933325 4,4.0055202 V 21.527787 c 1.227494,1.098631 2,2.695208 2,4.472213 0,3.313709 -2.686291,6 -6,6 z m 0,-2 c 2.209139,0 4,-1.790861 4,-4 0,-1.480566 -0.804398,-2.773254 -2,-3.464871 V 4.0049466 C 18,2.8976452 17.11227,2 16,2 14.895431,2 14,2.8970262 14,4.0049466 V 22.535129 C 12.804398,23.226746 12,24.519434 12,26 c 0,2.209139 1.790861,4 4,4 z m 0,-1 c -1.656854,0 -3,-1.343146 -3,-3 0,-1.656854 1.343146,-3 3,-3 1.656854,0 3,1.343146 3,3 0,1.656854 -1.343146,3 -3,3 z m 0,0'\n    };\n  }\n  if (celcius >= 10 && celcius < 20) {\n    return {\n      id: 3,\n      name: 'Cool',\n      color: 'warning.light',\n      path:\n        'm 16,30 c 2.209139,0 4,-1.790861 4,-4 0,-1.480566 -0.804398,-2.773254 -2,-3.464871 V 4.0049466 C 18,2.8976452 17.11227,2 16,2 14.895431,2 14,2.8970262 14,4.0049466 V 22.535129 C 12.804398,23.226746 12,24.519434 12,26 c 0,2.209139 1.790861,4 4,4 z m 0,-1 c -1.656854,0 -3,-1.343146 -3,-3 0,-1.31085 0.840738,-2.425335 2.012406,-2.833649 C 15.004239,23.115176 15,23.062694 15,23.009222 V 18.990778 C 15,18.450975 15.447715,18 16,18 c 0.556135,0 1,0.443586 1,0.990778 v 4.018444 c 0,0.05332 -0.0044,0.105767 -0.01277,0.157002 C 18.159087,23.574432 19,24.689013 19,26 c 0,1.656854 -1.343146,3 -3,3 z m 0,3 c -3.313709,0 -6,-2.686291 -6,-6 0,-1.777005 0.772506,-3.373582 2,-4.472213 V 4.0055202 C 12,1.7870853 13.790861,0 16,0 c 2.204644,0 4,1.7933325 4,4.0055202 V 21.527787 c 1.227494,1.098631 2,2.695208 2,4.472213 0,3.313709 -2.686291,6 -6,6 z m 0,0'\n    };\n  }\n  if (celcius >= 20 && celcius < 30) {\n    return {\n      id: 4,\n      name: 'Warm',\n      color: 'warning.light',\n      path:\n        'm 16,30 c 2.209139,0 4,-1.790861 4,-4 0,-1.480566 -0.804398,-2.773254 -2,-3.464871 V 4.0049466 C 18,2.8976452 17.11227,2 16,2 14.895431,2 14,2.8970262 14,4.0049466 V 22.535129 C 12.804398,23.226746 12,24.519434 12,26 c 0,2.209139 1.790861,4 4,4 z m 0,-1 c -1.656854,0 -3,-1.343146 -3,-3 0,-1.311415 0.841462,-2.426295 2.01392,-2.834176 C 15.004763,23.111105 15,23.054878 15,22.997527 V 13.002473 C 15,12.455761 15.447715,12 16,12 c 0.556135,0 1,0.448823 1,1.002473 v 9.995054 c 0,0.05719 -0.0049,0.113383 -0.0143,0.168164 C 18.158354,23.573461 19,24.688442 19,26 c 0,1.656854 -1.343146,3 -3,3 z m 0,3 c -3.313709,0 -6,-2.686291 -6,-6 0,-1.777005 0.772506,-3.373582 2,-4.472213 V 4.0055202 C 12,1.7870853 13.790861,0 16,0 c 2.204644,0 4,1.7933325 4,4.0055202 V 21.527787 c 1.227494,1.098631 2,2.695208 2,4.472213 0,3.313709 -2.686291,6 -6,6 z m 0,0'\n    };\n  }\n  if (celcius >= 30 && celcius < 40) {\n    return {\n      id: 5,\n      name: 'Hot',\n      color: 'secondary.light',\n      path:\n        'm 16,30 c 2.209139,0 4,-1.790861 4,-4 0,-1.480566 -0.804398,-2.773254 -2,-3.464871 V 4.0049466 C 18,2.8976452 17.11227,2 16,2 14.895431,2 14,2.8970262 14,4.0049466 V 22.535129 C 12.804398,23.226746 12,24.519434 12,26 c 0,2.209139 1.790861,4 4,4 z m 0,-1 c -1.656854,0 -3,-1.343146 -3,-3 0,-1.306218 0.834806,-2.417456 2,-2.829294 V 7.9933977 C 15,7.4449463 15.447715,7 16,7 c 0.556135,0 1,0.4447593 1,0.9933977 V 23.170706 c 1.165194,0.411838 2,1.523076 2,2.829294 0,1.656854 -1.343146,3 -3,3 z m 0,3 c -3.313709,0 -6,-2.686291 -6,-6 0,-1.777005 0.772506,-3.373582 2,-4.472213 V 4.0055202 C 12,1.7870853 13.790861,0 16,0 c 2.204644,0 4,1.7933325 4,4.0055202 V 21.527787 c 1.227494,1.098631 2,2.695208 2,4.472213 0,3.313709 -2.686291,6 -6,6 z m 0,0'\n    };\n  }\n  if (celcius >= 40) {\n    return {\n      id: 6,\n      name: 'Blazing',\n      color: 'secondary.light',\n      path:\n        'm 16,30 c 2.209139,0 4,-1.790861 4,-4 0,-1.480566 -0.804398,-2.773254 -2,-3.464871 V 4.0049466 C 18,2.8976452 17.11227,2 16,2 14.895431,2 14,2.8970262 14,4.0049466 V 22.535129 C 12.804398,23.226746 12,24.519434 12,26 c 0,2.209139 1.790861,4 4,4 z m 0,-1 c -1.656854,0 -3,-1.343146 -3,-3 0,-1.306218 0.834806,-2.417456 2,-2.829294 V 4.0024617 C 15,3.4394583 15.447715,3 16,3 c 0.556135,0 1,0.4488174 1,1.0024617 V 23.170706 c 1.165194,0.411838 2,1.523076 2,2.829294 0,1.656854 -1.343146,3 -3,3 z m 0,3 c -3.313709,0 -6,-2.686291 -6,-6 0,-1.777005 0.772506,-3.373582 2,-4.472213 V 4.0055202 C 12,1.7870853 13.790861,0 16,0 c 2.204644,0 4,1.7933325 4,4.0055202 V 21.527787 c 1.227494,1.098631 2,2.695208 2,4.472213 0,3.313709 -2.686291,6 -6,6 z m 0,0'\n    };\n  }\n  return { id: 0, name: 'error', color: 'warning', path: '' };\n};\n","import { createSlice } from '@reduxjs/toolkit';\nimport { getLocalState } from '../helpers';\n\nconst initialState = {\n  prefersDarkMode: false,\n  prefersCelcius: true,\n  previousCities: [],\n  ...getLocalState(),\n  inputValue: ''\n};\n\nconst uiSlice = createSlice({\n  name: 'ui',\n  initialState,\n  reducers: {\n    toggleDarkMode: (state) => {\n      state.prefersDarkMode = !state.prefersDarkMode;\n    },\n    toggleCelcius: (state) => {\n      state.prefersCelcius = !state.prefersCelcius;\n    },\n    setInputValue: (state, action) => {\n      state.inputValue = action.payload;\n    },\n    addPreviousCities: (state, action) => {\n      const newCity = action.payload;\n      const cityAlreadyExists = state.previousCities.findIndex((prevCity) => prevCity.id === newCity.id) !== -1;\n      if (!cityAlreadyExists) {\n        state.previousCities.unshift(action.payload);\n        if (state.previousCities.length > 5) state.previousCities.pop();\n      }\n    },\n    delPreviousCity: (state, action) => {\n      const cityIndexToDelete = action.payload;\n      state.previousCities.splice(cityIndexToDelete, 1);\n    }\n  }\n});\n\nconst { actions, reducer } = uiSlice;\n\nexport const { toggleDarkMode, toggleCelcius, setInputValue, addPreviousCities, delPreviousCity } = actions;\n\nexport default reducer;\n","export const getLocalState = () => {\n  try {\n    const serializedState = localStorage.getItem('state');\n    if (!serializedState) return undefined;\n    return JSON.parse(serializedState);\n  } catch (err) {\n    return undefined;\n  }\n};\n\nexport const setLocalState = (state) => {\n  try {\n    const serializedState = JSON.stringify(state);\n    localStorage.setItem('state', serializedState);\n  } catch (err) {\n    throw new Error(\"can't access localStorage\");\n  }\n};\n","import axios from 'axios';\n\nexport default axios.create({\n  baseURL: `/cities`,\n});\n","import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\nimport API from '../API/cities';\n\nconst initialState = {\n  fetchState: null,\n  response: null,\n  cityNameToSearch: null\n};\n\nexport const fetchCities = createAsyncThunk('cities/fetchCities', (q) =>\n  API.get('/', { params: { q } })\n    .then((res) => res.data)\n    .catch((err) => err)\n);\n\nconst citiesSlice = createSlice({\n  name: 'cities',\n  initialState,\n  reducers: {\n    citiesReset: () => initialState,\n    setCityNameToSearch: (state, action) => {\n      state.cityNameToSearch = action.payload;\n    }\n  },\n  extraReducers: {\n    [fetchCities.fulfilled]: (state, action) => {\n      state.response = action.payload;\n      state.fetchState = 'fulfilled';\n    },\n    [fetchCities.pending]: (state) => {\n      state.fetchState = 'pending';\n    }\n  }\n});\n\nconst { actions, reducer } = citiesSlice;\n\nexport const { citiesReset, setCityNameToSearch } = actions;\n\nexport default reducer;\n","import axios from 'axios';\n\nexport default axios.create({\n  baseURL: `/forecast`,\n});\n","import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\nimport API from '../API/forecast';\n\nconst initialState = {\n  fetchState: null,\n  response: null,\n  cityIdToSearch: null\n};\n\nexport const fetchForecast = createAsyncThunk('forecast/fetchForecast', (id) =>\n  API.get('/', { params: { id } })\n    .then((res) => res.data)\n    .catch((err) => err)\n);\n\nconst forecastSlice = createSlice({\n  name: 'forecast',\n  initialState,\n  reducers: {\n    forecastReset: () => initialState,\n    setCityIdToSearch: (state, action) => {\n      state.cityIdToSearch = action.payload;\n    }\n  },\n  extraReducers: {\n    [fetchForecast.fulfilled]: (state, action) => {\n      state.response = action.payload;\n      state.fetchState = 'fulfilled';\n    },\n    [fetchForecast.pending]: (state) => {\n      state.fetchState = 'pending';\n    }\n  }\n});\n\nconst { actions, reducer } = forecastSlice;\n\nexport const { forecastReset, setCityIdToSearch } = actions;\n\nexport default reducer;\n","import { configureStore } from '@reduxjs/toolkit';\nimport { setLocalState } from '../helpers';\n\nimport ui from './ui';\nimport cities from './cities';\nimport forecast from './forecast';\n\nexport const store = configureStore({\n  reducer: { ui, cities, forecast }\n});\n\nstore.subscribe(() => {\n  setLocalState(store.getState().ui);\n});\n\nexport { fetchCities, citiesReset, setCityNameToSearch } from './cities';\nexport { fetchForecast, forecastReset, setCityIdToSearch } from './forecast';\nexport { toggleDarkMode, toggleCelcius, setInputValue, addPreviousCities, delPreviousCity } from './ui';\n","import React, { useRef } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { TextField, IconButton } from '@material-ui/core';\nimport { useDebouncedCallback } from 'use-debounce';\nimport { Clear as ClearIcon } from '@material-ui/icons';\nimport { setCityNameToSearch, setInputValue } from '../redux';\n\nfunction Input() {\n  const dispatch = useDispatch();\n  const inputRef = useRef();\n  const inputValue = useSelector((state) => state.ui.inputValue);\n  const fetchState = useSelector((state) => state.cities.fetchState);\n\n  const [debouncedCallback] = useDebouncedCallback((value) => {\n    if (inputValue.length > 1) dispatch(setCityNameToSearch(value));\n  }, 1000);\n\n  const handleChange = (e) => {\n    const { value } = e.target;\n    dispatch(setInputValue(value));\n    debouncedCallback(value);\n  };\n\n  const handleClear = () => {\n    dispatch(setInputValue(''));\n    inputRef.current.focus();\n  };\n\n  return (\n    <TextField\n      inputRef={inputRef}\n      label='Enter city name'\n      id='outlined-margin-normal'\n      variant='outlined'\n      fullWidth\n      onChange={handleChange}\n      value={inputValue}\n      disabled={fetchState === 'pending'}\n      autoComplete='off'\n      InputProps={{\n        endAdornment: inputValue && (\n          <IconButton edge='end' onClick={handleClear}>\n            <ClearIcon />\n          </IconButton>\n        )\n      }}\n    />\n  );\n}\n\nexport default Input;\n","import React from 'react';\nimport { useSelector } from 'react-redux';\n\nimport { Grid, makeStyles, Box, SvgIcon } from '@material-ui/core';\nimport { getTime, k2c, k2f, getTempLevel } from '../helpers';\n\nconst useStyles = makeStyles({\n  container: {\n    display: 'flex',\n    flexWrap: 'wrap',\n    // fontFamily: 'monospace',\n    fontSize: '12px'\n  },\n  cluster: {\n    display: 'flex',\n    flexGrow: '1',\n    flexBasis: '256px'\n  },\n  group: {\n    display: 'flex',\n    flexDirection: 'column',\n    flexGrow: '1',\n    flexBasis: '128px'\n  },\n  pair: {\n    display: 'flex',\n    flexDirection: 'row'\n  },\n  key: {\n    padding: '2px',\n    display: 'flex',\n    fontWeight: 'bold',\n    flexGrow: '1',\n    flexBasis: '64px',\n    justifyContent: 'flex-end',\n    whiteSpace: 'nowrap'\n  },\n  value: {\n    padding: '2px',\n    display: 'flex',\n    flexGrow: '1',\n    flexBasis: '64px',\n    whiteSpace: 'nowrap'\n  },\n  specialGroup: {\n    display: 'flex',\n    flexGrow: '1',\n    flexBasis: '128px',\n    justifyContent: 'center'\n  },\n  temp: {\n    display: 'flex',\n    fontSize: '38px',\n    fontWeight: 'bold',\n    alignItems: 'center',\n    lineHeight: '32px'\n  },\n  icon: {\n    display: 'flex',\n    height: 'unset',\n    width: '32px'\n  }\n});\n\nfunction WeatherData({ data }) {\n  const classes = useStyles();\n  const { temp, temp_min: minTemp, temp_max: maxTemp, sunrise, sunset, pressure, humidity } = data;\n  const prefersCelcius = useSelector((state) => state.ui.prefersCelcius);\n\n  const formattedTemp = prefersCelcius ? k2c(temp) : k2f(temp);\n  const formattedMinTemp = prefersCelcius ? k2c(minTemp) : k2f(minTemp);\n  const formattedMaxTemp = prefersCelcius ? k2c(maxTemp) : k2f(maxTemp);\n  const formattedSunrise = getTime(sunrise);\n  const formattedSunset = getTime(sunset);\n  const { color: tempLevelColor, path: tempLevelIconPath } = getTempLevel(temp);\n  return (\n    <Grid className={classes.container}>\n      <Grid className={classes.cluster}>\n        <Grid className={classes.specialGroup}>\n          <SvgIcon className={classes.icon} viewBox='0 0 32 32'>\n            <path d={tempLevelIconPath} />\n          </SvgIcon>\n          <Box classes={{ root: classes.temp }} component='span' color={tempLevelColor}>\n            {formattedTemp}\n          </Box>\n        </Grid>\n        <Grid className={classes.group}>\n          <Grid className={classes.pair}>\n            <Grid className={classes.key}>{`Maximum: `}</Grid>\n            <Grid className={classes.value}>{formattedMaxTemp}</Grid>\n          </Grid>\n          <Grid className={classes.pair}>\n            <Grid className={classes.key}>{`Minimum: `}</Grid>\n            <Grid className={classes.value}>{formattedMinTemp}</Grid>\n          </Grid>\n        </Grid>\n      </Grid>\n      <Grid className={classes.cluster}>\n        <Grid className={classes.group}>\n          <Grid className={classes.pair}>\n            <Grid className={classes.key}>{`Pressure: `}</Grid>\n            <Grid className={classes.value}>{`${pressure} hPa`}</Grid>\n          </Grid>\n          <Grid className={classes.pair}>\n            <Grid className={classes.key}>{`Humidity: `}</Grid>\n            <Grid className={classes.value}>{`${humidity} %`}</Grid>\n          </Grid>\n        </Grid>\n        <Grid className={classes.group}>\n          <Grid className={classes.pair}>\n            <Grid className={classes.key}>{`Sunrise: `}</Grid>\n            <Grid className={classes.value}>{formattedSunrise}</Grid>\n          </Grid>\n          <Grid className={classes.pair}>\n            <Grid className={classes.key}>{`Sunset: `}</Grid>\n            <Grid className={classes.value}>{formattedSunset}</Grid>\n          </Grid>\n        </Grid>\n      </Grid>\n    </Grid>\n  );\n}\n\nexport default WeatherData;\n","import React, { useState } from 'react';\nimport {\n  Card,\n  CardHeader,\n  CardContent,\n  CardMedia,\n  Avatar,\n  makeStyles,\n  Divider,\n  Grid,\n  Fade,\n  Collapse\n} from '@material-ui/core';\nimport WeatherData from './WeatherData';\nimport { getLocalDateTime } from '../helpers';\n\nconst useStyles = makeStyles({\n  cardHeaderContent: {\n    minWidth: '0'\n  },\n  cardHeaderTitle: {\n    whiteSpace: 'nowrap',\n    overflow: 'hidden',\n    textOverflow: 'ellipsis',\n    minWidth: '0',\n    fontSize: '15px;'\n  },\n  cardHeaderSubheader: {\n    whiteSpace: 'nowrap',\n    overflow: 'hidden',\n    textOverflow: 'ellipsis',\n    minWidth: '0',\n    fontSize: '12px;'\n  },\n  weatherAvatar: {\n    backgroundColor: 'rgba(127,127,127,1)',\n    width: '40px',\n    height: '40px'\n  },\n  flagAvatar: {\n    width: '40px',\n    height: '40px'\n  },\n  worldMapAvatar: {\n    margin: '8px',\n    width: '100px',\n    height: '100px',\n    position: 'absolute',\n    boxShadow: '0px 0px 4px rgba(127,127,127,0.5)'\n  },\n  title: {\n    overflow: 'hidden',\n    textOverflow: 'ellipsis',\n    whiteSpace: 'nowrap'\n  },\n  withBoxShadow: {\n    boxShadow: '0px 2px 1px -1px rgba(0,0,0,0.2), 0px 1px 1px 0px rgba(0,0,0,0.14), 0px 1px 3px 0px rgba(0,0,0,0.12)'\n  }\n});\n\nfunction Forecast(props) {\n  const classes = useStyles();\n  const { forecast } = props;\n  const { main, name: cityName, weather, coord, sys, timezone: timezoneOffset, extraData } = forecast;\n  const { name: country, flag, region, subregion, timezones } = extraData;\n  const timeZone = timezones[0];\n  const { sunrise, sunset } = sys;\n  const data = { ...main, sunrise, sunset, flag, region, subregion };\n  const { main: weatherMain, description: weatherDesc, icon: Weather } = weather[0];\n  const { lon, lat } = coord;\n\n  const [showCityMap, setShowCityMap] = useState(false);\n  const [showWorldMap, setShowWorldMap] = useState(false);\n  const [showFlag, setShowFlag] = useState(false);\n  const [showWeather, setShowWeather] = useState(false);\n\n  const googleMapStaticUrl = 'https://maps.googleapis.com/maps/api/staticmap';\n  const publicApiKey = 'AIzaSyATSrlXeexQILWJpBpOehRMdeVeRowLq70';\n  const cityMapUrl = `${googleMapStaticUrl}?zoom=10&scale=1&size=568x568&maptype=hybrid&markers=size:mid%7Ccolor:red%7C${lat},${lon}&key=${publicApiKey}`;\n  const worldMapUrl = `${googleMapStaticUrl}?zoom=1&scale=1&size=100x100&maptype=terrain&markers=size:tiny%7Ccolor:red%7C${lat},${lon}&key=${publicApiKey}`;\n  return (\n    <Fade in timeout={1000}>\n      <Card>\n        <Grid container spacing={0}>\n          <Grid item xs={12} sm={6}>\n            <CardHeader\n              classes={{\n                content: classes.cardHeaderContent,\n                title: classes.cardHeaderTitle,\n                subheader: classes.cardHeaderSubheader\n              }}\n              avatar={\n                <Fade in={showFlag} timeout={1000}>\n                  <Avatar\n                    alt={`country flag of ${cityName}`}\n                    src={flag}\n                    classes={{ root: classes.flagAvatar }}\n                    onLoad={() => setShowFlag(true)}\n                    className={classes.withBoxShadow}\n                  />\n                </Fade>\n              }\n              title={`Weather in ${cityName}`}\n              subheader={country}\n            />\n          </Grid>\n          <Grid item xs={12} sm={6}>\n            <CardHeader\n              classes={{\n                content: classes.cardHeaderContent,\n                title: classes.cardHeaderTitle,\n                subheader: classes.cardHeaderSubheader\n              }}\n              avatar={\n                <Fade in={showWeather} timeout={1000}>\n                  <Avatar\n                    alt={weatherDesc}\n                    src={`http://openweathermap.org/img/wn/${Weather}@2x.png`}\n                    classes={{ root: classes.weatherAvatar }}\n                    onLoad={() => setShowWeather(true)}\n                    className={classes.withBoxShadow}\n                  />\n                </Fade>\n              }\n              title={`${weatherMain} (${weatherDesc})`}\n              subheader={`${getLocalDateTime(timezoneOffset)} ${timeZone}`}\n            />\n          </Grid>\n        </Grid>\n        <Divider light variant='middle' />\n        <CardContent>\n          <WeatherData data={data} />\n        </CardContent>\n        <Collapse in={showCityMap} timeout={1000} onEntered={() => setShowWorldMap(true)}>\n          <Fade in={showWorldMap} timeout={1000}>\n            <Avatar\n              alt='world map'\n              src={worldMapUrl}\n              classes={{ root: classes.worldMapAvatar }}\n              className={classes.withBoxShadow}\n            />\n          </Fade>\n          <CardMedia component='img' src={cityMapUrl} onLoad={() => setShowCityMap(true)} />\n        </Collapse>\n      </Card>\n    </Fade>\n  );\n}\n\nexport default Forecast;\n","import React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Alert } from '@material-ui/lab';\nimport { CircularProgress, Grid, Grow, Fade } from '@material-ui/core';\nimport { fetchForecast } from '../redux';\nimport Forecast from './Forecast';\n\nfunction ForecastResults() {\n  const dispatch = useDispatch();\n\n  const response = useSelector((state) => state.forecast.response);\n  const cityIdToSearch = useSelector((state) => state.forecast.cityIdToSearch);\n  const fetchState = useSelector((state) => state.forecast.fetchState);\n  const cityNameToSearch = useSelector((state) => state.cities.cityNameToSearch);\n\n  useEffect(() => {\n    if (cityIdToSearch) {\n      dispatch(fetchForecast(cityIdToSearch));\n    }\n  }, [cityIdToSearch, dispatch]);\n\n  const renderComponent = () => {\n    if (fetchState !== 'idle' && !cityNameToSearch) {\n      if (fetchState === 'fulfilled') {\n        if (response.cod === 200) {\n          if (response.coord) {\n            return <Forecast forecast={response} />;\n          }\n          return (\n            <Fade in timeout={10000}>\n              <Alert severity='info'>No forecast found for City with id &quot;{cityIdToSearch}&quot;.</Alert>\n            </Fade>\n          );\n        }\n        return (\n          <Fade in timeout={1000}>\n            <Alert severity='error'>{response.message}</Alert>\n          </Fade>\n        );\n      }\n      if (fetchState === 'pending') {\n        return (\n          <Grow in timeout={1000}>\n            <Grid container justify='center'>\n              <CircularProgress />\n            </Grid>\n          </Grow>\n        );\n      }\n    }\n    return null;\n  };\n\n  return renderComponent();\n}\n\nexport default ForecastResults;\n","import React from 'react';\nimport { ListItemAvatar, Avatar, ListItem, ListItemText } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\n\nfunction City(props) {\n  const { city, onCityClick } = props;\n  const { id, name, state, flag } = city;\n\n  const useStyles = makeStyles({\n    avatar: {\n      minWidth: '40px'\n    },\n    small: {\n      height: '24px',\n      width: '24px'\n    },\n    ListItemText: {\n      whiteSpace: 'nowrap',\n      overflow: 'hidden',\n      textOverflow: 'ellipsis'\n    }\n  });\n\n  const classes = useStyles();\n\n  return (\n    <ListItem minwidth='0px' button onClick={() => onCityClick(id, name)}>\n      <ListItemAvatar classes={{ root: classes.avatar }}>\n        <Avatar className={classes.small} variant='circle' alt={`country flag of ${name}`} src={flag} />\n      </ListItemAvatar>\n      <ListItemText disableTypography classes={{ root: classes.ListItemText }}>\n        {state && `${state} - `}\n        {name}\n      </ListItemText>\n    </ListItem>\n  );\n}\n\nexport default City;\n","import React from 'react';\nimport { FixedSizeList as List } from 'react-window';\nimport { Fade } from '@material-ui/core';\nimport City from './City';\n\nfunction Row(props) {\n  const { index, style, data } = props;\n  const { cities, onCityClick } = data;\n  const cityItem = cities[index];\n  return (\n    <div style={style} key={index}>\n      <City city={cityItem} onCityClick={onCityClick} />\n    </div>\n  );\n}\n\nfunction CityList(props) {\n  const { cities, onCityClick } = props;\n\n  return (\n    <Fade in timeout={1000}>\n      <List\n        className='List'\n        scrollToItem\n        height={300}\n        itemCount={cities.length}\n        itemSize={36}\n        itemData={{ cities, onCityClick }}\n        overscanCount={4}\n      >\n        {Row}\n      </List>\n    </Fade>\n  );\n}\n\nexport default CityList;\n","import React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Alert } from '@material-ui/lab';\nimport { CircularProgress, Grid, Grow, Fade } from '@material-ui/core';\nimport { citiesReset, fetchCities, setInputValue, addPreviousCities, setCityIdToSearch } from '../redux';\nimport CityList from './CityList';\n\nfunction InputResults() {\n  const dispatch = useDispatch();\n\n  const handleCityClick = (id, name) => {\n    dispatch(setInputValue(name));\n    dispatch(addPreviousCities({ id, name }));\n    dispatch(citiesReset());\n    dispatch(setCityIdToSearch(id));\n  };\n\n  const response = useSelector((state) => state.cities.response);\n  const cityNameToSearch = useSelector((state) => state.cities.cityNameToSearch);\n  const fetchState = useSelector((state) => state.cities.fetchState);\n\n  useEffect(() => {\n    if (cityNameToSearch) {\n      dispatch(fetchCities(cityNameToSearch));\n    }\n  }, [cityNameToSearch, dispatch]);\n\n  const renderComponent = () => {\n    if (fetchState !== 'idle') {\n      if (fetchState === 'fulfilled') {\n        if (!response.name) {\n          if (response.length) {\n            return <CityList cities={response} onCityClick={handleCityClick} />;\n          }\n          return (\n            <Fade in timeout={1000}>\n              <Alert severity='info'>No cities found using &quot;{cityNameToSearch}&quot;.</Alert>\n            </Fade>\n          );\n        }\n        return (\n          <Fade in timeout={1000}>\n            <Alert severity='error'>{response.message}</Alert>\n          </Fade>\n        );\n      }\n      if (fetchState === 'pending') {\n        return (\n          <Grow in timeout={1000}>\n            <Grid container justify='center'>\n              <CircularProgress />\n            </Grid>\n          </Grow>\n        );\n      }\n    }\n    return null;\n  };\n\n  return renderComponent();\n}\n\nexport default InputResults;\n","import React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Switch } from '@material-ui/core';\nimport { toggleDarkMode } from '../redux';\n\nfunction DarkModeToggler() {\n  const dispatch = useDispatch();\n  const prefersDarkMode = useSelector((state) => state.ui.prefersDarkMode);\n\n  const handleClick = () => {\n    dispatch(toggleDarkMode());\n  };\n\n  return <Switch checked={prefersDarkMode} onChange={handleClick} color='default' />;\n}\n\nexport default DarkModeToggler;\n","import React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Switch } from '@material-ui/core';\nimport { toggleCelcius } from '../redux';\n\nfunction CelciusToggler() {\n  const dispatch = useDispatch();\n  const prefersCelcius = useSelector((state) => state.ui.prefersCelcius);\n\n  const handleClick = () => {\n    dispatch(toggleCelcius());\n  };\n\n  return <Switch checked={prefersCelcius} onChange={handleClick} color='default' />;\n}\n\nexport default CelciusToggler;\n","import React from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport {\n  makeStyles,\n  Box,\n  IconButton,\n  Avatar,\n  ListItem,\n  Menu,\n  List,\n  Divider,\n  ListItemText,\n  ListItemSecondaryAction,\n  ListSubheader,\n  Paper,\n  Toolbar,\n  Tooltip\n} from '@material-ui/core';\n\nimport {\n  Menu as MenuIcon,\n  Brightness5 as SunIcon,\n  Brightness3 as MoonIcon,\n  Delete as DeleteIcon,\n  FiberManualRecord as DotIcon,\n  GitHub as GitHubIcon\n} from '@material-ui/icons';\n\nimport { delPreviousCity, setInputValue, setCityIdToSearch } from '../redux';\n\nimport DarkModeToggler from './DarkModeToggler';\nimport CelciusToggler from './CelciusToggler';\n\nconst useStyles = makeStyles((theme) => ({\n  small: {\n    width: theme.spacing(4),\n    height: theme.spacing(4)\n  },\n  dot: {\n    margin: '4px',\n    fontSize: '8px'\n  },\n  list: {\n    minWidth: '288px'\n  },\n  root: {\n    whiteSpace: 'nowrap',\n    overflow: 'hidden',\n    textOverflow: 'ellipsis',\n    maxWidth: '224px'\n  },\n  pushToRight: {\n    marginLeft: 'auto'\n  }\n}));\n\nfunction MainMenu() {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  const [anchorEl, setAnchorEl] = React.useState(null);\n  const open = Boolean(anchorEl);\n  const previousCities = useSelector((state) => state.ui.previousCities);\n\n  const handleMenuClick = (e) => {\n    setAnchorEl(e.currentTarget);\n  };\n\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n\n  const handleCityNameClick = (name, id) => {\n    dispatch(setInputValue(name));\n    dispatch(setCityIdToSearch(id));\n    handleClose();\n  };\n\n  const handleCityDelClick = (index) => {\n    dispatch(delPreviousCity(index));\n  };\n\n  return (\n    <Paper position='static' color='primary'>\n      <Toolbar disableGutters variant='dense'>\n        <IconButton aria-label='menu1' aria-controls='menu1' aria-haspopup='true' onClick={handleMenuClick}>\n          <MenuIcon />\n        </IconButton>\n        <DotIcon className={classes.dot} color='secondary' />\n        <Box fontWeight='bold' fontStyle='italic' fontSize='18px' component='span'>\n          WEATHER\n        </Box>\n        <DotIcon className={classes.dot} color='disabled' />\n        <Box fontWeight='bold' fontStyle='italic' fontSize='18px' component='span'>\n          APP\n        </Box>\n        <DotIcon className={classes.dot} color='primary' />\n        <Tooltip title='Go to repository' placement='left' arrow>\n          <IconButton\n            aria-label='github'\n            href='https://github.com/davila23/javascript-forecast'\n            className={classes.pushToRight}\n            target='_blank'\n            rel='noopener'\n          >\n            <GitHubIcon />\n          </IconButton>\n        </Tooltip>\n      </Toolbar>\n      <Menu id='menu1' anchorEl={anchorEl} keepMounted open={open} onClose={handleClose}>\n        <List className={classes.list} subheader={<ListSubheader>SETTINGS</ListSubheader>}>\n          <ListItem>\n            <ListItemText>Dark Mode</ListItemText>\n            <Avatar className={classes.small}>\n              <SunIcon />\n            </Avatar>\n            <DarkModeToggler />\n            <Avatar className={classes.small}>\n              <MoonIcon />\n            </Avatar>\n          </ListItem>\n          <ListItem>\n            <ListItemText>Temp. Unit</ListItemText>\n            <Avatar className={classes.small} size='small'>\n              <Box fontWeight='bold' fontSize='1.2em'>\n                F\n              </Box>\n            </Avatar>\n            <CelciusToggler />\n            <Avatar className={classes.small} size='small'>\n              <Box fontWeight='bold' fontSize='1.2em'>\n                C\n              </Box>\n            </Avatar>\n          </ListItem>\n        </List>\n        {previousCities.length > 0 && <Divider /> && (\n          <List dense subheader={<ListSubheader>PREVIOUS CITIES</ListSubheader>}>\n            {previousCities.map((prevCity, index) => (\n              <ListItem button key={prevCity.id} onClick={() => handleCityNameClick(prevCity.name, prevCity.id)}>\n                <ListItemText disableTypography classes={{ root: classes.root }}>\n                  {prevCity.name}\n                </ListItemText>\n                <ListItemSecondaryAction>\n                  <IconButton edge='end' aria-label='delete' onClick={() => handleCityDelClick(index)}>\n                    <DeleteIcon />\n                  </IconButton>\n                </ListItemSecondaryAction>\n              </ListItem>\n            ))}\n          </List>\n        )}\n      </Menu>\n    </Paper>\n  );\n}\n\nexport default MainMenu;\n","import React from 'react';\nimport { useSelector } from 'react-redux';\n\nimport { Container, Grid, Box, createMuiTheme, ThemeProvider, CssBaseline, Fade } from '@material-ui/core';\nimport 'typeface-roboto';\n\nimport Input from './Input';\nimport ForecastResults from './ForecastResults';\nimport InputResults from './InputResults';\nimport MainMenu from './MainMenu';\n\nfunction App() {\n  const prefersDarkMode = useSelector((state) => state.ui.prefersDarkMode);\n  const theme = React.useMemo(\n    () =>\n      createMuiTheme({\n        palette: {\n          type: prefersDarkMode ? 'dark' : 'light'\n        }\n      }),\n    [prefersDarkMode]\n  );\n\n  return (\n    <ThemeProvider theme={theme}>\n      <CssBaseline>\n        <Fade in timeout={1000}>\n          <Container maxWidth='sm' disableGutters>\n            <Box m={2}>\n              <Grid container spacing={2}>\n                <Grid item xs={12}>\n                  <MainMenu />\n                </Grid>\n                <Grid item xs={12}>\n                  <Input />\n                </Grid>\n                <Grid item xs={12}>\n                  <InputResults />\n                  <ForecastResults />\n                </Grid>\n              </Grid>\n            </Box>\n          </Container>\n        </Fade>\n      </CssBaseline>\n    </ThemeProvider>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { store } from './redux';\nimport App from './components/App';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}
